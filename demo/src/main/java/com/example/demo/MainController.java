package com.example.demo;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;


    @PostMapping(path="/signup", consumes = "application/json")
    public  @ResponseBody String signup(@RequestBody User user) {
        // Check if a user with the same email already exists
        if (userRepository.existsByEmail(user.getEmail())) {
            return ("User with this email already exists");
        }
        // If the email doesn't exist, save the user
        userRepository.save(user);

        return "success";
    }

    @PostMapping(path="/login", consumes = "application/json")
    public ResponseEntity<RequestResponse> login(@RequestBody User user) {
        if(userRepository.existsByEmail(user.getEmail())){
            if(userRepository.password(user.getEmail()).equals(user.getPassword())){
                user.setName(userRepository.findName(user.getEmail()));
                return ResponseEntity.ok(new RequestResponse("success"));
            }
            return ResponseEntity.ok(new RequestResponse("pass incorrect"));
        }
        return ResponseEntity.ok(new RequestResponse("email incorrect"));
    }

    static class RequestResponse {
        private String message;


        public RequestResponse(String message) {
            this.message = message;
        }
        public String getMessage() {
            return message;
        }

        public void setMessage(String message) {
            this.message = message;
        }
    }


    @GetMapping("/logout")
    public ResponseEntity<RequestResponse> logout(HttpServletRequest request, HttpServletResponse response) {
        HttpSession session=request.getSession(false);
        session.invalidate();
        return ResponseEntity.ok(new RequestResponse("logged_out"));

    }
}